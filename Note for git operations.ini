[Configuration git environment]
git config --global user.name "Yonggang Liu"
git config --global user.email "Yonggang.G.Liu@qq.com"
git config --global merge.tool meld
git config --global diff.tool meld
git config --global difftool.prompt false
git config --global mergetool.prompt false
git config --global alias.lol "log --graph --decorate --pretty=oneline --abbrev-commit"
git config --global alias.st "status"
git config --global alias.ci "commit"
git config --global alias.co "checkout"
git config --global alias.br "branch"
git config --global alias.di "difftool"
git config --global alias.subupd "submodule update --recursive --init"


[Create a local repo]
0.1 Create a local reop
#mkdir demo_for_git
#git init
#git add Readme.md
#git commit -m "First commit"
0.2 Setup connection with remote repo
#git remote add origin https://github.com/ggangliu/demo_for_git.git
#git push -u origin master

[Clone a repo from git server]
1.1 Clone a repo
#git clone https://github.com/ggangliu/demo_for_git.git
#git clone ssh://134.138.199.148/home/eqnghhe/dotsw2.git

[Branch operation]
2.1 Checkout a branch
#git status
#git checkout -b my_branch1
#git status

2.2 Add a new file in branch
#git add new_file.txt
#git commit -m "Add a new file"
#git push origin my_branch1
#git branch //show branch
#git checkout //switch branch
 
2.3 Merge the change from branch
#git checkout master
#git merge --no-ff my_branch1
#git push origin master

2.4 How to delete a branch
#git branch
#git checkout master
#git push origin :my_branch1
#git push -d origin my_branch1
#git br -D local-branch-name

[How to see the difference]
#git diff 
#git diff --cached //after the file which was added.

[How to see commit but haven't push]
#git log master  ^origin/master

[Add files to repo]
#git add files.txt
#git commit -m "Add files"
#git push -u origin master

[Delete a file]
#rm file.txt
#git add file.txt
#git commit -m "Delete file

[Sync master to branch]
#git rebase
#git am --show-current-patch //Show the difference between remote and local 
#git rebase --continue //Continuing to apply the rest of patch 
#git rebase --abort  //Backing to the status which is in before rebase 

[Git reset/checkout/revert]
#git reset --hard HEAD //This operation will discard all change which are not uncommit, excluding untracked files
#git checkout -- file.txt //Recovery the file which was deleted, back to the status which wasn't changed.

[Modify an error which has been commited]
1. Create a new commit
#git revert HEAD
#git revert HEAD^ //Next to last
 
2. Modify the old commit
#git commit --amend    //modify the latest commit
#git rebase -i HEAD~3 //modify history commit 
#git push

[Checkout branch from remote repository]
#git branch -r
#git checkout -b ht-setup-carrier origin/ht-setup-carrier
#git checkout -b issue1234-master --track origin/master

[Give up local changes]
@before excuting git add 
# git checkout -- filepathname //one file
# git checkout .  //all file have changed
@after excuting git add
#git reset HEAD filepathname //give up the file has been cache
#git reset HEAD . 
@after git commit
#git reset --hard HEAD^
#git reset --hard  commitid
@after git push
#git reset --soft <commit-id>
#git push origin branch –-force
#git add  git commit git push


[How to statistics the number of adding and changing]
#git log --author="Yonggang Liu" --pretty=tformat: --numstat | awk '{ add += $1; subs += $2; loc += $1 - $2 } END { printf "added lines: %s, removed lines: %s, total lines: %s\n", add, subs, loc }'

[How to see remote branch]
#git branch -a

[How to push into remote branch]
#git push -u origin ht-setup-carrier

[How to push branch into remote master]
#git push -u origin master new_branch


[How to setup your push destination to use the master server]
#git remote add share ssh://${USER}share
#git remote set-url --push share ssh://${USER}share

[Clone DOT code]
#git clone ssh://$USER/sw


[Create your local development branch]
#git fetch 
#git checkout -b issue1234-master --track origin/master
#git pull --rebase
#git subupd  
#git push origin HEAD:refs/drafts/master
##git push origin HEAD:refs/for/BRANCH%draft


[Push drafts master]
#git remote set-url --push origin ssh://${USER}@sw
#git push origin HEAD:refs/drafts/master   
 
 
[push formal code into offical branch]
#git submodule update --init --recursive
#git remote set-url --push origin ssh://${USER}sw
#git add <file1.cc> <file2.cc>
#git commit --amend <file1.cc> <file2.cc>
#git push origin HEAD:refs/for/master


[Rebase your local development branch]
#git rebase
@merge and git add if there are conflict, don't need to git-commit 
#git rebase --continue
#git rebase --abort //branch will be return to the before state that branch was executed the operation of rebase


[Get file list of which files were modified for added between two commits]
#git diff --name-status 3173afd12ec67f9bcf53081d939199198369229d b7e4cda08ca6cf4277b3de854e745d44e73491f4


[Change the origin of repo]
#git remote set-url --add origin https://github.com/ggangliu/for-practicing-howto-use-git.git
#git remote set-url --delete origin https://github.com/ggangliu/demo_for_git.git

[Sync code from remote]
#git pull = git fetch + git merge
#git pull --rebase = git fetch + git rebase